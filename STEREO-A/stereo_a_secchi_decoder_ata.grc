options:
  parameters:
    author: Daniel Estevez
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: stereo_a_secchi_decoder_ata
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: STEREO-A SECCHI decoder
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: access_code
  id: variable
  parameters:
    comment: ''
    value: '''''.join([str(i) for i in (syncword+1)//2])[-64:]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [152, 1036.0]
    rotation: 0
    state: enabled
- name: baudrate
  id: variable
  parameters:
    comment: ''
    value: '3800'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [960, 44.0]
    rotation: 0
    state: enabled
- name: decim
  id: variable
  parameters:
    comment: ''
    value: '8'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [736, 20.0]
    rotation: 0
    state: true
- name: fc
  id: variable
  parameters:
    comment: ''
    value: 512e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 12.0]
    rotation: 0
    state: true
- name: pll_bw
  id: variable
  parameters:
    comment: ''
    value: '100'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 284.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 480e3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: ''
    value: samp_rate/(baudrate * decim)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1064, 44.0]
    rotation: 0
    state: enabled
- name: syncword
  id: variable
  parameters:
    comment: ''
    value: 2*np.unpackbits(np.frombuffer(bytes.fromhex(syncword_hex), dtype = 'uint8')).astype('int')-1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [152, 956.0]
    rotation: 0
    state: enabled
- name: syncword_hex
  id: variable
  parameters:
    comment: ''
    value: '''25D5C0CE8990F6C9461BF79CDA2A3F31766F0936B9E40863'''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [152, 876.0]
    rotation: 0
    state: enabled
- name: turbo_octets
  id: variable
  parameters:
    comment: ''
    value: '5'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [120, 1132.0]
    rotation: 0
    state: enabled
- name: analog_pll_carriertracking_cc_0
  id: analog_pll_carriertracking_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    max_freq: '3.14'
    maxoutbuf: '0'
    min_freq: '-3.14'
    minoutbuf: '0'
    w: 2*3.14*pll_bw/samp_rate
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 188.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_float_0
  id: blocks_complex_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [920, 192.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_interleaved_short_0
  id: blocks_complex_to_interleaved_short
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale_factor: 2**15
    vector_output: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [464, 380.0]
    rotation: 0
    state: true
- name: blocks_complex_to_real_0
  id: blocks_complex_to_real
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 976.0]
    rotation: 0
    state: enabled
- name: blocks_file_sink_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: frames.u8
    type: byte
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1040, 1332.0]
    rotation: 0
    state: disabled
- name: blocks_file_sink_1
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: stereo-a_480ksps.ci16
    type: short
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 372.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '-1'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 1092.0]
    rotation: 0
    state: enabled
- name: digital_costas_loop_cc_0
  id: digital_costas_loop_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    order: '2'
    use_snr: 'False'
    w: '0.01'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [128, 648.0]
    rotation: 0
    state: enabled
- name: digital_symbol_sync_xx_0
  id: digital_symbol_sync_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: digital.constellation_bpsk().base()
    damping: '1.0'
    loop_bw: '0.01'
    max_dev: '0.01'
    maxoutbuf: '0'
    minoutbuf: '0'
    nfilters: '128'
    osps: '1'
    pfb_mf_taps: '[]'
    resamp_type: digital.IR_MMSE_8TAP
    sps: sps
    ted_gain: '1.0'
    ted_type: digital.TED_GARDNER
    type: cc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [912, 500.0]
    rotation: 0
    state: enabled
- name: dslwp_ccsds_pseudo_randomizer_0
  id: dslwp_ccsds_pseudo_randomizer
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    data_format: '3'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [112, 1276.0]
    rotation: 0
    state: enabled
- name: dslwp_ccsds_turbo_decode_0
  id: dslwp_ccsds_turbo_decode
  parameters:
    affinity: ''
    alias: ''
    base: '223'
    code_type: '6'
    comment: ''
    iterations: '10'
    maxoutbuf: '0'
    minoutbuf: '0'
    octets: turbo_octets
    sigma: '0.707'
    update_sigma: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [360, 1236.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport pathlib\nimport\
      \ struct\nimport subprocess\nimport warnings\n\nimport numpy as np\nimport matplotlib.pyplot\
      \ as plt\nfrom gnuradio import gr\nimport pmt\nfrom construct import *\n\n\n\
      TMPrimaryHeader = BitStruct(\n    'transfer_frame_version_number' / BitsInteger(2),\n\
      \    'spacecraft_id' / BitsInteger(10),\n    'virtual_channel_id' / BitsInteger(3),\n\
      \    'ocf_flag' / Flag,\n    'master_channel_frame_count' / BitsInteger(8),\n\
      \    'virtual_channel_frame_count' / BitsInteger(8),\n    'secondary_header_flag'\
      \ / Flag,\n    'synch_flag' / Flag,\n    'packet_order_flag' / Flag,\n    'segment_length_id'\
      \ / BitsInteger(2),\n    'first_header_pointer' / BitsInteger(11)\n)\n\nSpacePacketPrimaryHeader\
      \ = BitStruct(\n    'ccsds_version' / BitsInteger(3),\n    'packet_type' / BitsInteger(1),\n\
      \    'secondary_header_flag' / Flag,\n    'APID' / BitsInteger(11),\n    'sequence_flags'\
      \ / BitsInteger(2),\n    'packet_sequence_count_or_name' / BitsInteger(14),\n\
      \    'data_length' / BitsInteger(16)\n)\n\nSECCHIBlockHeader = BitStruct(\n\
      \    'padding' / Padding(5),\n    'image_count' / BitsInteger(11),\n    'block_type'\
      \ / BitsInteger(2),\n    'block_number' / BitsInteger(14),\n    'block_length'\
      \ / BitsInteger(16)\n)\n\n\nclass SecchiExtractor:\n    def __init__(self, apid,\
      \ output_dir):\n        self.apid = apid\n        self.output_dir = pathlib.Path(output_dir)\n\
      \        self.block = bytearray()\n        self.seq_count = None\n\n    def\
      \ process_packet(self, packet):\n        packet_header = SpacePacketPrimaryHeader.parse(packet)\n\
      \        seq_count_new = packet_header.packet_sequence_count_or_name\n     \
      \   if self.seq_count is not None \\\n          and seq_count_new != ((self.seq_count\
      \ + 1) % 2**14):\n            warnings.warn(f'[SECCHI block extractor APID {self.apid}]\
      \ '\n                          'Broken stream. '\n                         \
      \ f'Last seq count {self.seq_count}, '\n                          f'current\
      \ seq count {seq_count_new}')\n            self.block = bytearray()\n      \
      \  self.seq_count = seq_count_new\n\n        first = struct.unpack('>H', packet[12:14])[0]\n\
      \        if first == 0x7ff:\n            # no packet starts\n            if\
      \ self.block:\n                self.block.extend(packet[14:])\n            return\n\
      \        \n        if self.block:\n            self.block.extend(packet[14:][:first])\n\
      \            self.block = bytes(self.block)\n            if self.check_secchi_block():\n\
      \                self.process_block()\n\n        while True:\n            self.block\
      \ = bytearray(packet[14:][first:][:SECCHIBlockHeader.sizeof()])\n          \
      \  if len(self.block) < SECCHIBlockHeader.sizeof():\n                # not full\
      \ block header inside frame\n                return\n            first += SECCHIBlockHeader.sizeof()\n\
      \            block_header = SECCHIBlockHeader.parse(self.block)\n          \
      \  self.block.extend(packet[14:][first:][:block_header.block_length + 1])\n\
      \            first += block_header.block_length + 1\n            if first >\
      \ len(packet[14:]):\n                # block does not end in this frame\n  \
      \              return\n            self.block = bytes(self.block)\n        \
      \    if self.check_secchi_block():\n                self.process_block()\n \
      \           self.block = bytearray()\n            if first == len(packet[14:]):\n\
      \                # block just ends in this frame\n                return\n\n\
      \    def check_secchi_block(self):\n        if len(self.block) < SECCHIBlockHeader.sizeof():\n\
      \            warnings.warn('SECCHI block too short')\n            return False\n\
      \        header = SECCHIBlockHeader.parse(self.block)\n        expected = header.block_length\
      \ + 1 + SECCHIBlockHeader.sizeof()\n        if len(self.block) != expected:\n\
      \            warnings.warn(f'SECCHI block has incorrect size. Expected {expected};\
      \ '\n                          f'has {len(block)}')\n            return False\n\
      \        return True\n\n    def process_block(self):\n        header = SECCHIBlockHeader.parse(self.block)\n\
      \        print(f'[APID {self.apid}] received SECCHI block: {header}')\n    \
      \    if header.block_type != 0 or header.image_count == 2047:\n            return\n\
      \        if self.apid == 1139:\n            # apparently APID 1139 (HI2) is\
      \ compressed with rice instead of\n            # icer, so we just write the\
      \ compressed image\n            output_path = str(self.output_dir\n        \
      \                      / (f'SECCHI_APID{self.apid}_'\n                     \
      \            f'{header.image_count}_compressed.raw'))\n            with open(output_path,\
      \ 'wb') as f:\n                f.write(self.block[SECCHIBlockHeader.sizeof():])\n\
      \            return\n        with open('/tmp/secchi_compressed', 'wb') as f:\n\
      \            f.write(self.block[SECCHIBlockHeader.sizeof():])\n            output_path\
      \ = str(self.output_dir\n                              / (f'SECCHI_APID{self.apid}_'\n\
      \                                 f'{header.image_count}.raw'))\n          \
      \  output_png = str(self.output_dir\n                              / (f'SECCHI_APID{self.apid}_'\n\
      \                                 f'{header.image_count}.png'))\n          \
      \  subprocess.run(['./idecomp.linux', '-i', '/tmp/secchi_compressed',\n    \
      \                        '-o', output_path])\n            img = np.fromfile(output_path,\
      \ 'uint16')\n            size = int(np.sqrt(img.size))\n            img = img.reshape(size,\
      \ size).T\n            vertical_flip = self.apid in [1140]\n            if vertical_flip:\n\
      \                img = img[::-1]\n            plt.figure(figsize=(5, 5))\n \
      \           plt.imshow(img, cmap='inferno', vmin=0, vmax=np.max(img))\n    \
      \        plt.savefig(output_png)\n\n\nclass blk(gr.basic_block):  # other base\
      \ classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python\
      \ Block example - a simple multiply const\"\"\"\n\n    def __init__(self, output_dir='/tmp/'):\
      \  # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.basic_block.__init__(\n        \
      \    self,\n            name='STEREO-A SECCHI Decoder',   # will show up in\
      \ GRC\n            in_sig=[],\n            out_sig=[]\n        )\n        self.message_port_register_in(pmt.intern('in'))\n\
      \        self.set_msg_handler(pmt.intern('in'), self.handle_msg)\n        self.secchi_extractors\
      \ = {apid: SecchiExtractor(apid, output_dir)\n                             \
      \     for apid in range(1136, 1141)}\n\n    def handle_msg(self, msg_pmt):\n\
      \        msg = pmt.cdr(msg_pmt)\n        frame = np.array(pmt.u8vector_elements(msg),\
      \ 'uint8')\n        tm_header = TMPrimaryHeader.parse(frame)\n        vcid =\
      \ tm_header.virtual_channel_id\n        if vcid != 7:\n            # VCID 7\
      \ is the one containing SECCHI data\n            return\n        # Frames in\
      \ virtual channel 7 contain 4 Space Packets with a length of\n        # 272\
      \ bytes (which divides the transfer frame data field evenly in 4)\n        data_field\
      \ = frame[6+15:-6]\n        packets = data_field.reshape(4, 272)\n        for\
      \ packet in packets:\n            packet_header = SpacePacketPrimaryHeader.parse(packet)\n\
      \            apid = packet_header.APID\n            if apid in self.secchi_extractors:\n\
      \                self.secchi_extractors[apid].process_packet(packet)\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    output_dir: '''output'''
  states:
    _io_cache: ('STEREO-A SECCHI Decoder', 'blk', [('output_dir', "'/tmp/'")], [('in',
      'message', 1)], [], 'Embedded Python Block example - a simple multiply const',
      [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [800, 1428.0]
    rotation: 0
    state: true
- name: fir_filter_xxx_0
  id: fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_delay: '0'
    taps: '[1]*int(round(sps))'
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 548.0]
    rotation: 0
    state: enabled
- name: fir_filter_xxx_1_0
  id: fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_delay: '0'
    taps: syncword[::-1]/syncword.size
    type: ccf
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [336, 796.0]
    rotation: 0
    state: enabled
- name: freq_xlating_fir_filter_xxx_1
  id: freq_xlating_fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    center_freq: baudrate
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate / decim
    taps: firdes.low_pass(1, samp_rate / decim, baudrate, baudrate*0.1)
    type: fcf
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [304, 532.0]
    rotation: 0
    state: enabled
- name: gaindB
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: rx gain in decibels
    short_id: g
    type: eng_float
    value: '45'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [520, 4.0]
    rotation: 0
    state: enabled
- name: import_1
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import numpy as np
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [304, 12.0]
    rotation: 0
    state: true
- name: low_pass_filter_0
  id: low_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    cutoff_freq: 0.5 / decim * samp_rate
    decim: decim
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fir_filter_fff
    width: 0.1 / decim * samp_rate
    win: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 364.0]
    rotation: 0
    state: true
- name: pdu_pdu_to_tagged_stream_0
  id: pdu_pdu_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    tag: packet_len
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [808, 1348.0]
    rotation: 0
    state: disabled
- name: qtgui_const_sink_x_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: 1,1,1,1
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '1024'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 668.0]
    rotation: 0
    state: enabled
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '0.2'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '4096'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: 0,1,1,1
    label: Relative Gain
    label1: I
    label10: ''''''
    label2: Q
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: PLL output
    nconnections: '2'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: float
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '-60'
    ymin: '-120'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1160, 180.0]
    rotation: 0
    state: enabled
- name: qtgui_freq_sink_x_0_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '0.2'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '4096'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: 0,0,1,1
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: PLL input
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '-60'
    ymin: '-120'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 92.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: 1,0,1,1
    label1: I
    label10: Signal 10
    label2: Q
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: ASM correlation
    nconnections: '1'
    size: (8920+4+32)*6*2
    srate: baudrate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [632, 812.0]
    rotation: 0
    state: enabled
- name: satellites_crc_check_0
  id: satellites_crc_check
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    discard_crc: 'False'
    final_xor: '0x0'
    initial_value: '0xFFFF'
    input_reflected: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_bits: '16'
    poly: '0x1021'
    result_reflected: 'False'
    skip_header_bytes: '0'
    swap_endianness: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [584, 1264.0]
    rotation: 0
    state: enabled
- name: satellites_hexdump_sink_0
  id: satellites_hexdump_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    options: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [800, 1264.0]
    rotation: 0
    state: disabled
- name: satellites_rms_agc_0
  id: satellites_rms_agc
  parameters:
    affinity: ''
    alias: ''
    alpha: 1e-3
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    reference: '1.0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [752, 548.0]
    rotation: 0
    state: enabled
- name: satellites_sync_to_pdu_soft_0
  id: satellites_sync_to_pdu_soft
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    packlen: (223*8*turbo_octets+4)*6
    sync: access_code
    threshold: '12'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [616, 956.0]
    rotation: 0
    state: true
- name: satellites_sync_to_pdu_soft_0_0
  id: satellites_sync_to_pdu_soft
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    packlen: (223*8*turbo_octets+4)*6
    sync: access_code
    threshold: '12'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [616, 1076.0]
    rotation: 0
    state: true
- name: uhd_usrp_source
  id: uhd_usrp_source
  parameters:
    affinity: ''
    alias: ''
    ant0: RX2
    ant1: RX2
    ant10: ''
    ant11: ''
    ant12: ''
    ant13: ''
    ant14: ''
    ant15: ''
    ant16: ''
    ant17: ''
    ant18: ''
    ant19: ''
    ant2: RX2
    ant20: ''
    ant21: ''
    ant22: ''
    ant23: ''
    ant24: ''
    ant25: ''
    ant26: ''
    ant27: ''
    ant28: ''
    ant29: ''
    ant3: RX2
    ant30: ''
    ant31: ''
    ant4: ''
    ant5: ''
    ant6: ''
    ant7: ''
    ant8: ''
    ant9: ''
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    center_freq0: fc
    center_freq1: fc
    center_freq10: '0'
    center_freq11: '0'
    center_freq12: '0'
    center_freq13: '0'
    center_freq14: '0'
    center_freq15: '0'
    center_freq16: '0'
    center_freq17: '0'
    center_freq18: '0'
    center_freq19: '0'
    center_freq2: fc
    center_freq20: '0'
    center_freq21: '0'
    center_freq22: '0'
    center_freq23: '0'
    center_freq24: '0'
    center_freq25: '0'
    center_freq26: '0'
    center_freq27: '0'
    center_freq28: '0'
    center_freq29: '0'
    center_freq3: fc
    center_freq30: '0'
    center_freq31: '0'
    center_freq4: '0'
    center_freq5: '0'
    center_freq6: '0'
    center_freq7: '0'
    center_freq8: '0'
    center_freq9: '0'
    clock_rate: 0e0
    clock_source0: external
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    dc_offs0: 0+0j
    dc_offs1: 0+0j
    dc_offs10: 0+0j
    dc_offs11: 0+0j
    dc_offs12: 0+0j
    dc_offs13: 0+0j
    dc_offs14: 0+0j
    dc_offs15: 0+0j
    dc_offs16: 0+0j
    dc_offs17: 0+0j
    dc_offs18: 0+0j
    dc_offs19: 0+0j
    dc_offs2: 0+0j
    dc_offs20: 0+0j
    dc_offs21: 0+0j
    dc_offs22: 0+0j
    dc_offs23: 0+0j
    dc_offs24: 0+0j
    dc_offs25: 0+0j
    dc_offs26: 0+0j
    dc_offs27: 0+0j
    dc_offs28: 0+0j
    dc_offs29: 0+0j
    dc_offs3: 0+0j
    dc_offs30: 0+0j
    dc_offs31: 0+0j
    dc_offs4: 0+0j
    dc_offs5: 0+0j
    dc_offs6: 0+0j
    dc_offs7: 0+0j
    dc_offs8: 0+0j
    dc_offs9: 0+0j
    dc_offs_enb0: default
    dc_offs_enb1: default
    dc_offs_enb10: default
    dc_offs_enb11: default
    dc_offs_enb12: default
    dc_offs_enb13: default
    dc_offs_enb14: default
    dc_offs_enb15: default
    dc_offs_enb16: default
    dc_offs_enb17: default
    dc_offs_enb18: default
    dc_offs_enb19: default
    dc_offs_enb2: default
    dc_offs_enb20: default
    dc_offs_enb21: default
    dc_offs_enb22: default
    dc_offs_enb23: default
    dc_offs_enb24: default
    dc_offs_enb25: default
    dc_offs_enb26: default
    dc_offs_enb27: default
    dc_offs_enb28: default
    dc_offs_enb29: default
    dc_offs_enb3: default
    dc_offs_enb30: default
    dc_offs_enb31: default
    dc_offs_enb4: default
    dc_offs_enb5: default
    dc_offs_enb6: default
    dc_offs_enb7: default
    dc_offs_enb8: default
    dc_offs_enb9: default
    dev_addr: '"addr0=10.11.1.20"'
    dev_args: '""'
    gain0: gaindB
    gain1: gaindB
    gain10: '0'
    gain11: '0'
    gain12: '0'
    gain13: '0'
    gain14: '0'
    gain15: '0'
    gain16: '0'
    gain17: '0'
    gain18: '0'
    gain19: '0'
    gain2: gaindB
    gain20: '0'
    gain21: '0'
    gain22: '0'
    gain23: '0'
    gain24: '0'
    gain25: '0'
    gain26: '0'
    gain27: '0'
    gain28: '0'
    gain29: '0'
    gain3: gaindB
    gain30: '0'
    gain31: '0'
    gain4: '0'
    gain5: '0'
    gain6: '0'
    gain7: '0'
    gain8: '0'
    gain9: '0'
    gain_type0: default
    gain_type1: default
    gain_type10: default
    gain_type11: default
    gain_type12: default
    gain_type13: default
    gain_type14: default
    gain_type15: default
    gain_type16: default
    gain_type17: default
    gain_type18: default
    gain_type19: default
    gain_type2: default
    gain_type20: default
    gain_type21: default
    gain_type22: default
    gain_type23: default
    gain_type24: default
    gain_type25: default
    gain_type26: default
    gain_type27: default
    gain_type28: default
    gain_type29: default
    gain_type3: default
    gain_type30: default
    gain_type31: default
    gain_type4: default
    gain_type5: default
    gain_type6: default
    gain_type7: default
    gain_type8: default
    gain_type9: default
    iq_imbal0: 0+0j
    iq_imbal1: 0+0j
    iq_imbal10: 0+0j
    iq_imbal11: 0+0j
    iq_imbal12: 0+0j
    iq_imbal13: 0+0j
    iq_imbal14: 0+0j
    iq_imbal15: 0+0j
    iq_imbal16: 0+0j
    iq_imbal17: 0+0j
    iq_imbal18: 0+0j
    iq_imbal19: 0+0j
    iq_imbal2: 0+0j
    iq_imbal20: 0+0j
    iq_imbal21: 0+0j
    iq_imbal22: 0+0j
    iq_imbal23: 0+0j
    iq_imbal24: 0+0j
    iq_imbal25: 0+0j
    iq_imbal26: 0+0j
    iq_imbal27: 0+0j
    iq_imbal28: 0+0j
    iq_imbal29: 0+0j
    iq_imbal3: 0+0j
    iq_imbal30: 0+0j
    iq_imbal31: 0+0j
    iq_imbal4: 0+0j
    iq_imbal5: 0+0j
    iq_imbal6: 0+0j
    iq_imbal7: 0+0j
    iq_imbal8: 0+0j
    iq_imbal9: 0+0j
    iq_imbal_enb0: default
    iq_imbal_enb1: default
    iq_imbal_enb10: default
    iq_imbal_enb11: default
    iq_imbal_enb12: default
    iq_imbal_enb13: default
    iq_imbal_enb14: default
    iq_imbal_enb15: default
    iq_imbal_enb16: default
    iq_imbal_enb17: default
    iq_imbal_enb18: default
    iq_imbal_enb19: default
    iq_imbal_enb2: default
    iq_imbal_enb20: default
    iq_imbal_enb21: default
    iq_imbal_enb22: default
    iq_imbal_enb23: default
    iq_imbal_enb24: default
    iq_imbal_enb25: default
    iq_imbal_enb26: default
    iq_imbal_enb27: default
    iq_imbal_enb28: default
    iq_imbal_enb29: default
    iq_imbal_enb3: default
    iq_imbal_enb30: default
    iq_imbal_enb31: default
    iq_imbal_enb4: default
    iq_imbal_enb5: default
    iq_imbal_enb6: default
    iq_imbal_enb7: default
    iq_imbal_enb8: default
    iq_imbal_enb9: default
    lo_export0: 'False'
    lo_export1: 'False'
    lo_export10: 'False'
    lo_export11: 'False'
    lo_export12: 'False'
    lo_export13: 'False'
    lo_export14: 'False'
    lo_export15: 'False'
    lo_export16: 'False'
    lo_export17: 'False'
    lo_export18: 'False'
    lo_export19: 'False'
    lo_export2: 'False'
    lo_export20: 'False'
    lo_export21: 'False'
    lo_export22: 'False'
    lo_export23: 'False'
    lo_export24: 'False'
    lo_export25: 'False'
    lo_export26: 'False'
    lo_export27: 'False'
    lo_export28: 'False'
    lo_export29: 'False'
    lo_export3: 'False'
    lo_export30: 'False'
    lo_export31: 'False'
    lo_export4: 'False'
    lo_export5: 'False'
    lo_export6: 'False'
    lo_export7: 'False'
    lo_export8: 'False'
    lo_export9: 'False'
    lo_source0: internal
    lo_source1: internal
    lo_source10: internal
    lo_source11: internal
    lo_source12: internal
    lo_source13: internal
    lo_source14: internal
    lo_source15: internal
    lo_source16: internal
    lo_source17: internal
    lo_source18: internal
    lo_source19: internal
    lo_source2: internal
    lo_source20: internal
    lo_source21: internal
    lo_source22: internal
    lo_source23: internal
    lo_source24: internal
    lo_source25: internal
    lo_source26: internal
    lo_source27: internal
    lo_source28: internal
    lo_source29: internal
    lo_source3: internal
    lo_source30: internal
    lo_source31: internal
    lo_source4: internal
    lo_source5: internal
    lo_source6: internal
    lo_source7: internal
    lo_source8: internal
    lo_source9: internal
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    num_mboards: '1'
    otw: sc16
    rx_agc0: Default
    rx_agc1: Default
    rx_agc10: Default
    rx_agc11: Default
    rx_agc12: Default
    rx_agc13: Default
    rx_agc14: Default
    rx_agc15: Default
    rx_agc16: Default
    rx_agc17: Default
    rx_agc18: Default
    rx_agc19: Default
    rx_agc2: Default
    rx_agc20: Default
    rx_agc21: Default
    rx_agc22: Default
    rx_agc23: Default
    rx_agc24: Default
    rx_agc25: Default
    rx_agc26: Default
    rx_agc27: Default
    rx_agc28: Default
    rx_agc29: Default
    rx_agc3: Default
    rx_agc30: Default
    rx_agc31: Default
    rx_agc4: Default
    rx_agc5: Default
    rx_agc6: Default
    rx_agc7: Default
    rx_agc8: Default
    rx_agc9: Default
    samp_rate: samp_rate
    sd_spec0: ''
    sd_spec1: ''
    sd_spec2: ''
    sd_spec3: ''
    sd_spec4: ''
    sd_spec5: ''
    sd_spec6: ''
    sd_spec7: ''
    show_lo_controls: 'False'
    start_time: '-1.0'
    stream_args: ''
    stream_chans: '[]'
    sync: sync
    time_source0: external
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 156.0]
    rotation: 0
    state: enabled
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: phase_mod
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1160, 292.0]
    rotation: 0
    state: enabled
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: phase_mod
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [48, 412.0]
    rotation: 0
    state: enabled

connections:
- [analog_pll_carriertracking_cc_0, '0', blocks_complex_to_float_0, '0']
- [blocks_complex_to_float_0, '0', qtgui_freq_sink_x_0, '0']
- [blocks_complex_to_float_0, '1', qtgui_freq_sink_x_0, '1']
- [blocks_complex_to_float_0, '1', virtual_sink_0, '0']
- [blocks_complex_to_interleaved_short_0, '0', blocks_file_sink_1, '0']
- [blocks_complex_to_real_0, '0', blocks_multiply_const_vxx_0, '0']
- [blocks_complex_to_real_0, '0', satellites_sync_to_pdu_soft_0, '0']
- [blocks_multiply_const_vxx_0, '0', satellites_sync_to_pdu_soft_0_0, '0']
- [digital_costas_loop_cc_0, '0', blocks_complex_to_real_0, '0']
- [digital_costas_loop_cc_0, '0', fir_filter_xxx_1_0, '0']
- [digital_costas_loop_cc_0, '0', qtgui_const_sink_x_0, '0']
- [digital_symbol_sync_xx_0, '0', digital_costas_loop_cc_0, '0']
- [dslwp_ccsds_pseudo_randomizer_0, out, dslwp_ccsds_turbo_decode_0, in]
- [dslwp_ccsds_turbo_decode_0, out, satellites_crc_check_0, in]
- [fir_filter_xxx_0, '0', satellites_rms_agc_0, '0']
- [fir_filter_xxx_1_0, '0', qtgui_time_sink_x_0_0, '0']
- [freq_xlating_fir_filter_xxx_1, '0', fir_filter_xxx_0, '0']
- [low_pass_filter_0, '0', freq_xlating_fir_filter_xxx_1, '0']
- [pdu_pdu_to_tagged_stream_0, '0', blocks_file_sink_0, '0']
- [satellites_crc_check_0, ok, epy_block_0, in]
- [satellites_crc_check_0, ok, pdu_pdu_to_tagged_stream_0, pdus]
- [satellites_crc_check_0, ok, satellites_hexdump_sink_0, in]
- [satellites_rms_agc_0, '0', digital_symbol_sync_xx_0, '0']
- [satellites_sync_to_pdu_soft_0, out, dslwp_ccsds_pseudo_randomizer_0, in]
- [satellites_sync_to_pdu_soft_0_0, out, dslwp_ccsds_pseudo_randomizer_0, in]
- [uhd_usrp_source, '0', analog_pll_carriertracking_cc_0, '0']
- [uhd_usrp_source, '0', blocks_complex_to_interleaved_short_0, '0']
- [uhd_usrp_source, '0', qtgui_freq_sink_x_0_0, '0']
- [virtual_source_0, '0', low_pass_filter_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.6.0
